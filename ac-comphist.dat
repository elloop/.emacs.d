((("dstfile_name" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("endif" .
   [2 0 0 0 0])
  ("Debug" .
   [4 0 1 0 0])
  ("ifdef" .
   [2 0 0 0 0])
  ("e" .
   [1])
  ("match_count" .
   [0 0 0 1 0 0 0 0 0 1 0])
  ("for" .
   [0 0 1])
  ("close" .
   [0 0 0 0 1])
  ("is_open" .
   [0 0 1 0 0 0 0])
  ("out" .
   [3 0 0])
  ("i" .
   [1])
  ("fstream" .
   [0 0 1 0 0 0 0])
  ("empty" .
   [0 0 1 0 0])
  ("file_name" .
   [0 0 0 0 0 0 0 1 1])
  ("file" .
   [0 0 0 1])
  ("swap" .
   [0 0 0 1])
  ("continue" .
   [0 0 0 0 0 0 0 1])
  ("break" .
   [0 0 1 0 0])
  ("$1" .
   [1 0])
  ("replace_end" .
   [0 0 0 0 0 0 0 0 0 1 1])
  ("replace_begin" .
   [1 0 0 0 0 0 0 0 0 0 0 0 2])
  ("replace" .
   [0 0 0 1 0 0 0])
  ("sm" .
   [7 0])
  ("e4" .
   [1 0])
  ("else" .
   [0 0 1 0])
  ("regex_end" .
   [0 0 0 0 1 0 0 2 1])
  ("regex_begin" .
   [1 0 0 0 0 0 0 1 2 0 1])
  ("register" .
   [0 0 0 1 0 0 0 0])
  ("begin" .
   [1 0 2 0 0])
  ("pattern_end" .
   [0 0 0 0 0 0 0 0 0 1 3])
  ("pattern_begin" .
   [0 0 0 1 0 0 0 0 0 1 1 0 1])
  ("pattern" .
   [0 0 0 0 2 0 1])
  ("backup" .
   [0 0 1 1 0 0])
  ("line" .
   [4 0 0 8])
  ("output" .
   [0 0 1 0 0 0])
  ("content" .
   [0 0 0 0 0 0 3])
  ("vector" .
   [2 0 2 0 0 1])
  ("include" .
   [0 0 0 1 1 0 0])
  ("argv" .
   [2 0 0 0])
  ("srcfile_name" .
   [1 0 0 0 0 1 0 0 0 0 0 0])
  ("help" .
   [2 0 0 0])
  ("printUsage" .
   [0 0 0 0 0 1 0 0 0 0])
  ("c" .
   [3])
  ("return" .
   [0 0 0 1 1 0])
  ("argc" .
   [1 0 0 0])
  ("sm2e" .
   [0 0 0 1])
  ("s2e" .
   [2 0 0])
  ("pat3" .
   [3 0 0 0])
  ("end" .
   [2 0 0])
  ("sm1e" .
   [0 0 0 3])
  ("s1e" .
   [0 0 2])
  ("regex_replace" .
   [0 0 0 0 0 0 0 0 2 1 0 0 1])
  ("size" .
   [0 0 1 5])
  ("sm2b" .
   [0 0 1 2])
  ("s2b" .
   [0 0 2])
  ("regex_match" .
   [0 0 0 0 0 0 0 0 3 0 2])
  ("smatch" .
   [0 0 0 3 0 0])
  ("endl" .
   [5 0 0 6])
  ("cout" .
   [7 0 0 7])
  ("c_str" .
   [0 0 2 2 0])
  ("pat2" .
   [4 0 0 2])
  ("regex" .
   [4 0 0 1 6])
  ("string" .
   [5 0 0 0 0 8])
  ("const_cast" .
   [0 0 1 0 0 0 0 0 0 1])
  ("std" .
   [1 0 0])
  ("namespace" .
   [0 0 1 0 0 0 0 0 0])
  ("using" .
   [0 0 0 1 0])
  ("true" .
   [0 0 0 1])
  ("while" .
   [0 0 2 0 0])
  ("void" .
   [0 0 0 1])
  ("catch" .
   [0 0 1 0 0])
  ("setq" .
   [1 0 0 0])))
